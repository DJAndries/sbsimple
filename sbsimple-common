#!/bin/sh

BANNER="sbsimple 0.1.0"

# SECTION: Util

report_stage() {
	echo -e "\n[\x1b[36mSTAGE\x1b[0m] $1"
}

report_success() {
	[ -n "$LAST_REPORT" ] && echo -e "\r[\x1b[32mDONE\x1b[0m] $LAST_REPORT"
	unset LAST_REPORT
}

report_start() {
	report_success
	LAST_REPORT="$1"
	echo -ne "[\x1b[33mWAIT\x1b[0m] $1"
}

clean_tmp_keys() {
	for i in "${KEY_NAMES[@]}"; do
		rm "/tmp/$i.key" 2>/dev/null
	done
}

report_fail() {
	clean_tmp_keys
	[ -n "$LAST_REPORT" ] && echo -e "\r[\x1b[31mFAIL\x1b[0m] $LAST_REPORT"
	echo -e "\nLast command: $CMD"
	echo -e "Last command stderr: $CMDOUT"
	exit 1
}

ce() {
	CMD="$1"
	[ -n "$VERBOSE" ] && echo -e "\n[ce] Running: $CMD"
	CMDOUT=$(sh -c "$1" 2>&1)
	[ "$?" != "0" ] && report_fail
}

confirm() {
	echo -n "$1 (y/n) "
	read CONFIRM_VAL
	[ "$CONFIRM_VAL" != "y" ] && [ "$CONFIRM_VAL" != "Y" ] && return 1
	return 0
}

prompt_existing_passphrase() {
	[ -n "$PASS" ] && return 0
	echo -n "Enter passphrase to decrypt keys: "
	read -s PASS
	echo
	[ -n "$PASS" ] || prompt_existing_passphrase
}
